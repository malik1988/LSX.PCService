<Window x:Class="LSX.PCService.Views.WindowOnline"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:viewModels="clr-namespace:LSX.PCService.ViewModels"
        xmlns:Views="clr-namespace:LSX.PCService.Views"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Title="主窗口-上料窗口" Height="400" Width="800"
        WindowStyle="None" WindowState="Maximized"
        >
    <Window.Resources>
        <viewModels:ConverterDeviceStateColor x:Key="deviceStateColor"/>
    </Window.Resources>
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding ImportAwmsDataRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True" >
                <prism:PopupWindowAction.WindowContent >
                    <Views:PopupImportData/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding CustomPopupRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent >
                    <Views:PopupScanTrafficOrder/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding PopupScanPalletRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent >
                    <Views:PopupScanPallet/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding PopupBindingLpnRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent >
                    <Views:PopupBindingLpn/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding PopupErrorOrder}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent >
                    <Views:PopupBindingLpn/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding OpenAllWindowsRequest}">
            <prism:PopupWindowAction IsModal="False">
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="ShowInTaskbar" Value="False"/>
                        <Setter Property="WindowState" Value="Normal"/>
                        <Setter Property="WindowStyle" Value="None"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent >
                    <Views:WindowDispatch/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding OpenAllWindowsRequest}">
            <prism:PopupWindowAction IsModal="False" >
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="ShowInTaskbar" Value="False"/>
                        <Setter Property="WindowState" Value="Normal"/>
                        <Setter Property="WindowStyle" Value="None"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent >
                    <Views:WindowError/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding OpenAllEventsRequest}">
            <prism:PopupWindowAction IsModal="False" >
                <prism:PopupWindowAction.WindowStyle>
                    <Style TargetType="Window">
                        <Setter Property="ShowInTaskbar" Value="False"/>
                        <Setter Property="WindowState" Value="Normal"/>
                        <Setter Property="WindowStyle" Value="None"/>
                    </Style>
                </prism:PopupWindowAction.WindowStyle>
                <prism:PopupWindowAction.WindowContent >
                    <Views:PopupWindowAllEvents/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <Border BorderBrush="Black" BorderThickness="3" CornerRadius="5" >
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <StackPanel>
                <Border x:Name="xTitle"  MouseDown="xTitle_MouseDown">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFFCC00" Offset="0"/>
                            <GradientStop Color="#FFFFCC00" Offset="1"/>
                            <GradientStop Color="#FFFFCC00" Offset="0.791"/>
                            <GradientStop Color="#FFFAE408" Offset="0.49"/>
                            <GradientStop Color="#FFFAE207" Offset="0.342"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button x:Name="xMin"  MinHeight="30" MinWidth="30" Click="xMin_Click" ToolTip="最小化">
                            <Button.Background>
                                <ImageBrush ImageSource="../images/min1.png"/>
                            </Button.Background>
                        </Button>
                        <Button x:Name="xMax" MinHeight="30" MinWidth="30" Click="xMax_Click" ToolTip="最大化">
                            <Button.Background>
                                <ImageBrush ImageSource="../images/maximise.png"/>
                            </Button.Background>
                        </Button>
                        <Button x:Name="xQuit" MinHeight="30" MinWidth="30" Click="xQuit_Click" ToolTip="关闭">
                            <Button.Background>
                                <ImageBrush ImageSource="../images/quit1.png"/>
                            </Button.Background>
                        </Button>
                    </StackPanel>
                </Border>
                <ToolBar Grid.Row="0" >
                    <Button Content="打开所有窗口" Command="{Binding OpenAllWindowsCommand}" Margin="2" BorderThickness="2" BorderBrush="Black" />
                    <Button Content="导入发车明细表" Command="{Binding ImportAwmsDataCommand}" Margin="2" BorderThickness="2" BorderBrush="Black" />
                    <Button Content="扫描发货单号" Command="{Binding CustomPopupCommand}" Margin="2" BorderThickness="2" BorderBrush="Black" />
                    <Button Content="扫描栈板号" Command="{Binding PopupScanPalletCommand}" Margin="2" BorderThickness="2" BorderBrush="Black" />
                    <Button Content="绑定LPN" Command="{Binding PopupBindingLpnCommand}" Margin="2" BorderThickness="2" BorderBrush="Black" />
                    <Button Content="数据查询" Command="{Binding PopupAllEvents}" Margin="2" BorderThickness="2" BorderBrush="Black" />
                </ToolBar>
            </StackPanel>
            <Border Grid.Row="1" BorderBrush="Orange" CornerRadius="5" BorderThickness="2" Margin="5" >
                <StackPanel>
                    <TextBlock Text="当前识别箱号信息" FontSize="30" HorizontalAlignment="Center"/>
                    <DataGrid ItemsSource="{Binding CurrentBoxInfo}" AutoGenerateColumns="False" Width="auto" FontSize="30" IsReadOnly="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding 箱号}" Header="箱号" Width="2*"/>
                            <DataGridTextColumn Binding="{Binding C09}" Header="09码" Width="3*"/>
                            <DataGridTextColumn Binding="{Binding 数量}" Header="数量" Width="1*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </Border>
            <Border Grid.Row="2" BorderBrush="Blue" BorderThickness="2" CornerRadius="5" Margin="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <!--发货单号-->
                    <DataGrid ItemsSource="{Binding TrafficOrderList}" MinWidth="100" ToolTip="发货单号" Grid.Column="0" AutoGenerateColumns="False" IsReadOnly="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding id}" Header="编号"/>
                            <DataGridTextColumn Binding="{Binding torder}" Header="发货单号"/>
                            <DataGridTextColumn Binding="{Binding status}" Header="状态"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <DataGrid ItemsSource="{Binding PalletList}" MinWidth="100" ToolTip="栈板号" Grid.Column="1" AutoGenerateColumns="False" IsReadOnly="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding id}" Header="编号"/>
                            <DataGridTextColumn Binding="{Binding pallet}" Header="栈板号"/>
                            <DataGridTextColumn Binding="{Binding status}" Header="状态"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <DataGrid ItemsSource="{Binding CurrentOrderInfo}" MinWidth="200" ToolTip="当前订单详细信息" Grid.Column="2" AutoGenerateColumns="False" IsReadOnly="True">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding id}" Header="编号" Width="1*"/>
                            <DataGridTextColumn Binding="{Binding order}" Header="任务单号" Width="2*"/>
                            <DataGridTextColumn Binding="{Binding zncode}" Header="09码" Width="2*"/>
                            <DataGridTextColumn Binding="{Binding pallet}" Header="栈板号" Width="1*"/>
                            <DataGridTextColumn Binding="{Binding carton}" Header="箱号" Width="1*"/>
                            <DataGridTextColumn Binding="{Binding channel}" Header="通道" Width="1*"/>
                            <DataGridTextColumn Binding="{Binding total}" Header="总数" Width="1*"/>
                            <DataGridTextColumn Binding="{Binding carton_status}" Header="订单状态" Width="1*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Border>
            <StatusBar Grid.Row="3">
                <Label Content="状态："/>
                <ItemsControl Margin="3" ItemsSource="{Binding DeviceStatus}">
                    <!--整个ItemsControl外边框-->
                    <ItemsControl.Template>
                        <ControlTemplate TargetType="ItemsControl">
                            <Border BorderBrush="BlanchedAlmond" BorderThickness="2" CornerRadius="13">
                                <ItemsPresenter/>
                            </Border>
                        </ControlTemplate>
                    </ItemsControl.Template>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <!--数据-->
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="10"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                </Style>
                            </DataTemplate.Resources>
                            <Grid>
                                <Ellipse Fill="{Binding Status,Converter={StaticResource deviceStateColor}}"/>
                                <!--<Border BorderThickness="2" BorderBrush="Orange" CornerRadius="8"/>-->
                                <StackPanel>
                                    <TextBlock Margin="3,0,3,0"
                     Text="{Binding Type}"/>
                                    <TextBlock Margin="3,0,3,0"
                     Text="{Binding Ip}"/>
                                    <TextBlock Margin="3,0,3,0"
                     Text="{Binding Status}"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <!--提示信息-->
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Control.Width" Value="80"/>
                            <Setter Property="Control.Margin" Value="5"/>
                            <Style.Triggers>
                                <Trigger Property="Control.IsMouseOver" Value="True">
                                    <Setter Property="Control.ToolTip"
                  Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                          Path=Content.UpdateTime}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>
                
                <Separator Margin="10,0"/>
                <TextBlock Text="{Binding LightManagerErrMsg}" ToolTip="灯光服务器异常消息"/>
            </StatusBar>
        </Grid>
    </Border>
</Window>
